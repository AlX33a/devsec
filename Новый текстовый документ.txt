sudo apt update
git clone https://github.com/AlX33a/devsec.git /home
rm devsec/README.md
apt-get install python3-pip
apt-get install nginx
apt install nginx
# sudo ufw app list
nano /etc/ufw/applications.d/flask

[Flask]
title=Flask server
description=Flask development server, do not use it in prodaction
ports=5000/tcp

ufw allow 'OpenSSH'
ufw allow 'Nginx Full'
ufw allow 'Flask'
ufw enable
# sudo ufw app list
# sudo ufw status
# sudo systemctl status nginx
# sudo nginx -t
# sudo systemctl reload nginx
# sudo systemctl is-enabled nginx
# sudo systemctl enabled nginx
cd /home/devsec
apt-get install python3-venv
python3 -m venv venv
source venv/bin/activate
pip install flask
pip install gunicorn
python3 -m pip install -r requirements.txt
export FLASK_APP=dip
nano wsgi.py

from dip import create_app
a = create_app()
if __name__ == "__main__":
        a.run()

gunicorn --bind 90.156.210.194:5000 wsgi:a
apt install curl
# curl https://raw.githubusercontent.com/complexorganizations/wireguard-manager/main/wireguard-manager.sh --create-dirs -o /usr/local/bin/wireguard-manager.sh
apt install wireguard
# chmod +x /usr/local/bin/wireguard-manager.sh
# bash /usr/local/bin/wireguard-manager.sh
# sudo apt update
sudo apt install wireguard resolvconf -
nano /etc/wireguard/wg0.conf

[Interface]
PrivateKey = YCOb9/npMcZl+sf7AKPMdIlBDViTyGYX4lo2H5IspUA=
ListenPort = 51820
SaveConfig = false
Address = 10.13.14.93
DNS = 10.13.14.2, welsis_polimet.devsecops
PostUp = resolvectl dns %i 10.13.14.2; resolvectl domain %i ~welsis_polimet.devsecops
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

[Peer]
PublicKey = 2WXP0sW8UZqCt9wMmrw8hdTkTnh3HBz3BxkHoUbYZ2Q=
PresharedKey = LeQZ8uqlJnn0R3JxH4AAG9yDaWjYWzW47Uj7HQ1c98o=
Endpoint = 91.142.74.79:51820
AllowedIPs = 10.13.14.0/24

systemctl start wg-quick@wg0.service
sudo wg show
# nano /etc/systemd/system/devsec.service
sudo systemctl --force --full edit devsec.service

[Unit]
Description=devsec gunicorn instance
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/home/devsec
Environment="PATH=/home/devsec/venv/bin"
ExecStart=/home/devsec/venv/bin/gunicorn --workers 2 --bind unix:gunicorn.sock -m 007 wsgi:a

[Install]
WantedBy=multi-user.target


systemctl start devsec
# sudo systemctl daemon-reload

rm /etc/nginx/sites-enabled/default

nano /etc/nginx/conf.d/devsec.conf

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 10.13.14.93 welsis_polimet.devsecops www.welsis_polimet.devsecops;

        location / {
                include proxy_params;
                proxy_pass http://unix:/home/devsec/gunicorn.sock;
        }
}

nginx -s reload

sudo systemctl enable devsec